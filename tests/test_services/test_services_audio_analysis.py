
import tempfile 
import json
import sys
import os
from pydub import AudioSegment
#from pydub.utils import mediainfo
import pytest
import parselmouth

from tests.testing_utilities import assert_images_equal

from metilda.default import MIN_PITCH_HZ, MAX_PITCH_HZ
import metilda.services.audio_analysis as AA

PITCH_SAMPLES = [(0.2843424036281179, 127.95736457154844), (0.2943424036281179, 127.08856224311243), (0.30434240362811793, 126.45033816064401), (0.3143424036281179, 127.44297906956807), (0.3243424036281179, 129.276301362659), (0.3343424036281179, 130.96148788901297), (0.3443424036281179, 132.82131461292263), (0.3543424036281179, 134.99014414306697), (0.36434240362811793, 137.98019955276308), (0.37434240362811794, 142.1758080631324), (0.3843424036281179, 145.43306429814172), (0.3943424036281179, 148.35803584381455), (0.4043424036281179, 151.21010427638416), (0.4143424036281179, 153.4994389101892), (0.4243424036281179, 155.87847060097477), (0.43434240362811793, 156.65837394868464), (0.4443424036281179, 154.41039349719034), (0.4543424036281179, 158.17125940775696), (0.4643424036281179, 156.26568404737023), (0.4743424036281179, 154.3535617492517), (0.4843424036281179, 151.9821055782242), (0.49434240362811793, 148.8809025822217), (0.5043424036281179, 145.87584713228014), (0.5143424036281179, 143.0161409519025), (0.5243424036281179, 141.632234125797), (0.5343424036281179, 140.17378860593777), (0.5443424036281179, 134.5307018839533), (0.5543424036281179, 130.77719134552748), (0.5643424036281179, 127.67983524056304), (0.574342403628118, 123.74106114385124), (0.584342403628118, 120.38731995982283), (0.594342403628118, 116.81817145887698), (0.6043424036281179, 112.34955253762097), (0.6143424036281179, 105.8886129294821), (0.6243424036281179, 107.14332700182788), (1.034342403628118, 115.38432386354027), (1.044342403628118, 114.67740398871781), (1.054342403628118, 112.70600324499854), (1.064342403628118, 110.36934190425784), (1.074342403628118, 108.64575148057386), (1.084342403628118, 107.23811690294671), (1.094342403628118, 106.3101461796791), (1.104342403628118, 105.16535083582029), (1.114342403628118, 104.11301475811433), (1.124342403628118, 102.50226292493262), (1.134342403628118, 100.96363325446201), (1.144342403628118, 100.1875685703155), (1.154342403628118, 99.46289875153407), (1.164342403628118, 98.91109106609096), (1.174342403628118, 98.53593120707515), (1.1843424036281178, 97.95376910770887), (1.1943424036281178, 97.00224497160939), (1.2043424036281178, 94.99064193879663), (1.2143424036281179, 93.00999592015272), (1.2243424036281179, 89.08883512212323), (1.2343424036281179, 88.91891635058438), (1.2443424036281179, 89.5089780250194), (1.2543424036281179, 88.84094214219965), (1.264342403628118, 88.60025464686701), (1.274342403628118, 88.41726432327481), (1.284342403628118, 88.1466444366155), (1.294342403628118, 88.28507348853273), (1.304342403628118, 87.93911468150384), (1.314342403628118, 86.81767689073106), (1.324342403628118, 85.4495076772113), (1.334342403628118, 85.58728751906467), (1.344342403628118, 87.17894651044212), (1.354342403628118, 85.26060883534437), (1.364342403628118, 85.54439480599198), (1.374342403628118, 86.40702879117572), (1.384342403628118, 86.15598706267649), (1.394342403628118, 84.83053616902212), (1.404342403628118, 83.33755899763639), (1.414342403628118, 82.28484921102729), (1.424342403628118, 90.42914235177568), (1.4343424036281178, 85.32710511218129)]

# this function is called from within test_audio_analysis
#def test_draw_spectrogram():
    #assert False

# this function is called from within test_audio_analysis
#def test_draw_pitch():
    #assert False

def test_audio_analysis_image():
    assert_images_equal("metilda/images-baseline/rs_kaanaisskiinaa-create.png", AA.audio_analysis_image("metilda/sounds/RS_kaanaisskiinaa.wav"))

def test_get_pitches_in_range():
    snd = parselmouth.Sound("metilda/sounds/RS_kaanaisskiinaa.wav")
    snd_pitch = snd.to_pitch(pitch_floor= MIN_PITCH_HZ, pitch_ceiling=MAX_PITCH_HZ)
    t0, t1 = -1, 5
    assert PITCH_SAMPLES == AA.get_pitches_in_range(t0, t1, snd_pitch)
    
def test_get_all_pitches():
    assert PITCH_SAMPLES == AA.get_all_pitches((-1, 5), "metilda/sounds/RS_kaanaisskiinaa.wav")

def test_get_avg_pitch():
    assert 114.24665556247898 == AA.get_avg_pitch((0, 1.8586848072562359), "metilda/sounds/RS_kaanaisskiinaa.wav")

def test_get_sound_length():
    assert 1.8586848072562359 == AA.get_sound_length("metilda/sounds/RS_kaanaisskiinaa.wav")

def test_get_audio():
    temp_dir = tempfile.mkdtemp()
    temp_file = os.path.join(temp_dir, "audio.wav")

    temp_sound = AA.get_audio("metilda/sounds/RS_kaanaisskiinaa.wav",0, 1.8589342403628117)
    assert AudioSegment.from_raw(temp_sound, sample_width=2, frame_rate=44100, channels=2).export(temp_file, format='wav')
    
    temp_sound = AA.get_audio("metilda/sounds/RS_kaanaisskiinaa.wav",.25, 1)
    assert AudioSegment.from_raw(temp_sound, sample_width=2, frame_rate=44100, channels=2).export(temp_file, format='wav')